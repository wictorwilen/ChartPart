<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChartAdv" xml:space="preserve">
    <value>Дополнительные параметры диаграммы</value>
  </data>
  <data name="ChartBorder" xml:space="preserve">
    <value>Рисовать рамку</value>
  </data>
  <data name="ChartBorderDesc" xml:space="preserve">
    <value>Отображение рамки вокруг диаграммы</value>
  </data>
  <data name="ChartPartSettings" xml:space="preserve">
    <value>Параметры ChartPart</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>Тип диаграммы</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Количество</value>
  </data>
  <data name="CustomColors" xml:space="preserve">
    <value>Настраиваемые цвета</value>
  </data>
  <data name="CustomColorsDesc" xml:space="preserve">
    <value />
  </data>
  <data name="CustomPalette" xml:space="preserve">
    <value>Использовать настраиваемую палитру</value>
  </data>
  <data name="CustomPaletteDesc" xml:space="preserve">
    <value>Использование палитры с настраивыемым набором цветов</value>
  </data>
  <data name="CustomPaletteValues" xml:space="preserve">
    <value>Набор цветов палитры</value>
  </data>
  <data name="CustomPaletteValuesDesc" xml:space="preserve">
    <value>Введите список цветов палитры через запятую</value>
  </data>
  <data name="DropDownSelect" xml:space="preserve">
    <value>-- Выберите --</value>
  </data>
  <data name="Enable3DMode" xml:space="preserve">
    <value>Отображать в режиме 3D</value>
  </data>
  <data name="ExceptionOccurred" xml:space="preserve">
    <value>Возникло исключение:</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Высота</value>
  </data>
  <data name="HeightDesc" xml:space="preserve">
    <value>Высота диаграммы в пикселях</value>
  </data>
  <data name="ItemCount" xml:space="preserve">
    <value>(Количество элементов)</value>
  </data>
  <data name="Legend" xml:space="preserve">
    <value>Легенда</value>
  </data>
  <data name="LinkToSourceList" xml:space="preserve">
    <value>Ссылаться на список данных</value>
  </data>
  <data name="LinkToSourceListDesc" xml:space="preserve">
    <value>Диаграмма будет содержать ссылки на список источника данных</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Список</value>
  </data>
  <data name="MissingList" xml:space="preserve">
    <value>Не указан &lt;b&gt;Список&lt;/b&gt; источника данных.</value>
  </data>
  <data name="MissingSite" xml:space="preserve">
    <value>Не указан &lt;b&gt;Узел&lt;/b&gt; источника данных.</value>
  </data>
  <data name="MissingView" xml:space="preserve">
    <value>Не указано &lt;b&gt;Представление&lt;/b&gt; списка источника данных.</value>
  </data>
  <data name="MissingXAxis" xml:space="preserve">
    <value>Не указаны &lt;b&gt;Столбцы оси X&lt;/b&gt;.</value>
  </data>
  <data name="MissingYAxis" xml:space="preserve">
    <value>Не указан &lt;b&gt;Столбец оси Y&lt;/b&gt;.</value>
  </data>
  <data name="OpenToolPane" xml:space="preserve">
    <value>Кликните сюда, чтобы открыть панель инструментов веб-части…</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Палитра</value>
  </data>
  <data name="PaletteDesc" xml:space="preserve">
    <value>Выберите один из базовых типов палитры цветов</value>
  </data>
  <data name="ShowLegend" xml:space="preserve">
    <value>Отображать легенду</value>
  </data>
  <data name="ShowLegendDesc" xml:space="preserve">
    <value>Отображать легенду на диаграмме</value>
  </data>
  <data name="Site" xml:space="preserve">
    <value>Узел</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Стиль</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Заголовок</value>
  </data>
  <data name="ToolBuilderToolTip" xml:space="preserve">
    <value>Кликните, чтобы использовать построитель</value>
  </data>
  <data name="TreatAsZero" xml:space="preserve">
    <value>Обрабатывать пустые</value>
  </data>
  <data name="TreatAsZeroDesc" xml:space="preserve">
    <value>Обрабатывать пустые значения как ноли или исключать эти значения</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>Представление</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Ширина</value>
  </data>
  <data name="WidthDesc" xml:space="preserve">
    <value>Ширина диаграммы в пикселях</value>
  </data>
  <data name="XSeries" xml:space="preserve">
    <value>Столбцы оси X</value>
  </data>
  <data name="YSeries" xml:space="preserve">
    <value>Столбец оси Y</value>
  </data>
</root>