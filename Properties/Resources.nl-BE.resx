<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChartAdv" xml:space="preserve">
    <value>Geavanceerde instellingen</value>
  </data>
  <data name="ChartBorder" xml:space="preserve">
    <value>Teken een rand</value>
  </data>
  <data name="ChartBorderDesc" xml:space="preserve">
    <value>Tekent een rand rond de grafiek</value>
  </data>
  <data name="ChartPartSettings" xml:space="preserve">
    <value>ChartPart instellingen</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>Type grafiek</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Aantal</value>
  </data>
  <data name="CustomColors" xml:space="preserve">
    <value>Aangepaste kleuren</value>
  </data>
  <data name="CustomColorsDesc" xml:space="preserve">
    <value />
  </data>
  <data name="CustomPalette" xml:space="preserve">
    <value>Gebruik aangepast palet</value>
  </data>
  <data name="CustomPaletteDesc" xml:space="preserve">
    <value>Gebruik een aangepast palet door een aantal kleuren in te geven</value>
  </data>
  <data name="CustomPaletteValues" xml:space="preserve">
    <value>Aangepast palet waarden</value>
  </data>
  <data name="CustomPaletteValuesDesc" xml:space="preserve">
    <value>Geef de aangepaste kleuren in, gescheiden door kommas</value>
  </data>
  <data name="DropDownSelect" xml:space="preserve">
    <value>--Selecteer--</value>
  </data>
  <data name="Enable3DMode" xml:space="preserve">
    <value>Toon in 3D</value>
  </data>
  <data name="ExceptionOccurred" xml:space="preserve">
    <value>Een fout heeft zich voorgedaan:</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Hoogte</value>
  </data>
  <data name="HeightDesc" xml:space="preserve">
    <value>Hoogte van de grafiek in pixels</value>
  </data>
  <data name="ItemCount" xml:space="preserve">
    <value>(Aantal Items)</value>
  </data>
  <data name="Legend" xml:space="preserve">
    <value>Legende</value>
  </data>
  <data name="LinkToSourceList" xml:space="preserve">
    <value>Verbind met bronlijst</value>
  </data>
  <data name="LinkToSourceListDesc" xml:space="preserve">
    <value>De grafiek wordt met de bronlijst verbonden</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>Lijst</value>
  </data>
  <data name="MissingList" xml:space="preserve">
    <value>Geen &lt;b&gt;Lijst&lt;/b&gt; geselecteerd.</value>
  </data>
  <data name="MissingSite" xml:space="preserve">
    <value>Geen &lt;b&gt;Site&lt;/b&gt; geselecteerd.</value>
  </data>
  <data name="MissingView" xml:space="preserve">
    <value>Geen &lt;b&gt;View&lt;/b&gt; geselecteerd.</value>
  </data>
  <data name="MissingXAxis" xml:space="preserve">
    <value>Geen &lt;b&gt;kolommen voor de X-as&lt;/b&gt; geselecteerd</value>
  </data>
  <data name="MissingYAxis" xml:space="preserve">
    <value>Geen &lt;b&gt;kolommen voor de Y-as&lt;/b&gt; geselecteerd</value>
  </data>
  <data name="OpenToolPane" xml:space="preserve">
    <value>Klik hier om de Tool Pane te openen</value>
  </data>
  <data name="Palette" xml:space="preserve">
    <value>Palet</value>
  </data>
  <data name="PaletteDesc" xml:space="preserve">
    <value>Selecteer het palet waarop de grafiek zich baseert</value>
  </data>
  <data name="ShowLegend" xml:space="preserve">
    <value>Toon legende</value>
  </data>
  <data name="ShowLegendDesc" xml:space="preserve">
    <value>Toon de legende van de grafiek</value>
  </data>
  <data name="Site" xml:space="preserve">
    <value>Site</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>Stijl</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ToolBuilderToolTip" xml:space="preserve">
    <value>Klim om de builder te gebruiken</value>
  </data>
  <data name="TreatAsZero" xml:space="preserve">
    <value>Behandel als nul</value>
  </data>
  <data name="TreatAsZeroDesc" xml:space="preserve">
    <value>Behandel nulwaarden als nul, in het andere geval laat de rij niet zien</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Breedte</value>
  </data>
  <data name="WidthDesc" xml:space="preserve">
    <value>Breedte van de grafiek in pixels</value>
  </data>
  <data name="XSeries" xml:space="preserve">
    <value>X Series Kolom</value>
  </data>
  <data name="YSeries" xml:space="preserve">
    <value>Y Series Kolom</value>
  </data>
</root>